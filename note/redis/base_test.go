package redis

/*
INCR key
对存储在指定key的数值执行原子的加1操作。
如果指定的key不存在，那么在执行incr操作之前，会先将它的值设定为0。

INCRBY key increment
将key对应的数字加decrement。如果key不存在，操作之前，key就会被置为0。

DECR key
对key对应的数字做减1操作。如果key不存在，那么在操作之前，这个key对应的值会被置为0。

Redis的原子递增操作最常用的使用场景是计数器。
使用思路是：每次有相关操作的时候，就向Redis服务器发送一个incr命令。
例如这样一个场景：我们有一个web应用，我们想记录每个用户每天访问这个网站的次数。
web应用只需要通过拼接用户id和代表当前时间的字符串作为key，每次用户访问这个页面的时候对这个key执行一下incr命令。
这个场景可以有很多种扩展方法:
通过结合使用INCR和EXPIRE命令，可以实现一个只记录用户在指定间隔时间内的访问次数的计数器
客户端可以通过GETSET命令获取当前计数器的值并且重置为0
通过类似于DECR或者INCRBY等原子递增/递减的命令，可以根据用户的操作来增加或者减少某些值
比如在线游戏，需要对用户的游戏分数进行实时控制，分数可能增加也可能减少。
实例: 限速器
限速器是一种可以限制某些操作执行速率的特殊场景。
传统的例子就是限制某个公共api的请求数目。
假设我们要解决如下问题：限制某个api每秒每个ip的请求次数不超过10次。
我们可以通过incr命令来实现两种方法解决这个问题。
s示例：http://www.redis.cn/commands/incr.html
*/
